{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  labels: ['♻renovate'],
  assignees: ['DesselBane'],
  enabledManagers: ['npm', 'github-actions'],
  assigneesSampleSize: 1,
  commitBodyTable: true,
  configMigration: true,
  dependencyDashboard: true,
  platformAutomerge: true,
  platformCommit: 'enabled',
  automergeType: 'pr',
  rangeStrategy: 'pin',
  rebaseWhen: 'behind-base-branch',
  osvVulnerabilityAlerts: true,
  skipInstalls: false,
  stopUpdatingLabel: '❄️ On Hold',
  postUpdateOptions: ['pnpmDedupe'],
  prConcurrentLimit: 0,
  prHourlyLimit: 1,
  lockFileMaintenance: {
    enabled: true,
    recreateWhen: 'always',
    rebaseWhen: 'behind-base-branch',
    branchTopic: 'lock-file-maintenance',
    commitMessageAction: 'Lock file maintenance',
    schedule: ['before 4am on monday'],
    groupName: null,
    prBodyDefinitions: {
      Change: 'All locks refreshed',
    },
  },
  postUpgradeTasks: {
    commands: [
      'cp "$RENOVATE_POST_UPGRADE_COMMAND_DATA_FILE" ".changeset/update_{{{ replace "\/" "_" branchName}}}.json"',
    ],
    dataFileTemplate: '[{{#each upgrades}}{"depName": "{{{depName}}}", "currentVersion": "{{{currentVersion}}}", "newVersion": "{{{newVersion}}}", "depType": "{{{depType}}}, "packageFile": "{{{packageFile}}}, "manager": "{{{manager}}}, "updateType": "{{{updateType}}}"}{{#unless @last}},{{\/unless}}{{\/each}}]',
    fileFilters: ['.changeset/*.md', '.changeset/*.json'],
    executionMode: 'update',
  },
  automerge: false,
  npm: {
    minor: {
      automerge: true,
      addLabels: ['automerge'],
    },
    patch: {
      automerge: true,
      addLabels: ['automerge'],
    },
  },
  packageRules: [
    {
      groupName: 'Patch Updates',
      matchUpdateTypes: ['patch'],
    },
    {
      groupName: 'Peer Dependencies',
      rangeStrategy: 'widen',
      matchDepTypes: ['peerDependencies'],
      automerge: false,
    },
    {
      groupName: 'Vite',
      matchPackageNames: ['/.*vite.*/', 'vue3-snapshot-serializer'],
    },
    {
      groupName: '⚡Engines',
      rangeStrategy: 'widen',
      matchPackageNames: ['/.*node.*/', '/.*pnpm.*/'],
    },
    {
      groupName: 'Lodash',
      matchPackageNames: ['/.*lodash.*/'],
    },
    {
      groupName: 'ESlint',
      matchPackageNames: ['/.*eslint.*/'],
    },
  ],
}
